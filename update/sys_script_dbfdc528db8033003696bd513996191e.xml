<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_306278_project_m_milestones</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Proj Budget</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	// Add your code here
  //total will store all the milestones budget of one project
	var total =0;
  // creating object(mbr) for milestone table
	var mbr= new GlideRecord("x_306278_project_m_milestones");
  // using addQuery, filtering milestone using the field project_number of milestone table
	mbr.addQuery('project_number',current.project_number);
  
	mbr.query();
  //  whenever we use addQuery we should take next method to perform action because in addQuery method first index is there then object will be there
	while(mbr.next()) {
		total = total + mbr.milestone_budget;
	}
	//gs.addInfoMessage(total);
  // creating object for project management table
	var prj = new GlideRecord("x_306278_project_m_project_managment");
  //filtering project
	prj.addQuery('number',current.project_number);
	//gs.addInfoMessage(current.project_number);
	prj.query();
	prj.next();
	var prjbdg = prj.project_budget;
	//gs.addInfoMessage(prjbdg);
	var difference = total - prjbdg ;
	//gs.addInfoMessage(difference);
	
	if (total > prjbdg) {
		gs.addErrorMessage('Budget allocation is overloading by ' +difference);
	}
	
//prj.overloaded_budget = difference;
	
		 
	})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-03-04 09:45:00</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>dbfdc528db8033003696bd513996191e</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Proj Budget</sys_name>
        <sys_overrides/>
        <sys_package display_value="Project Managment" source="x_306278_project_m">39b43809db3323003696bd5139961995</sys_package>
        <sys_policy/>
        <sys_scope display_value="Project Managment">39b43809db3323003696bd5139961995</sys_scope>
        <sys_update_name>sys_script_dbfdc528db8033003696bd513996191e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-03-04 10:11:51</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=dbfdc528db8033003696bd513996191e"/>
</record_update>
